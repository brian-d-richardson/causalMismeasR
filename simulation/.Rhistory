subtitle = paste0(n.rep, " simulations per setting"))
}
return(plot)
}
sim.out.long %>%
mutate(k = factor(k)) %>%
ggplot(aes(x = k, y = est, group = k)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = EYa.true),
linetype = "dashed",
color = "orange") +
facet_grid(n ~ method,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Parameter Estimate",
x = "Number of Exposure Replicates for 5 Individuals",
fill = "Method",
color = "Method") +
theme_bw() +
theme(legend.position = "bottom") +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs)
sim.out.long %>%
mutate(k = factor(k)) %>%
ggplot(aes(x = k, y = est, group = k)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = EYa.true),
linetype = "dashed",
color = "orange") +
facet_grid(n ~ method,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Parameter Estimate",
x = "Number of Exposure Replicates for 5 Individuals",
fill = "Method",
color = "Method") +
theme_bw() +
theme(legend.position = "bottom")
View(sim.out.long)
sim.out.long %>%
mutate(k = factor(k)) %>%
ggplot(aes(x = k, y = ghat, group = k)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = ghat.true),
linetype = "dashed",
color = "orange") +
facet_grid(n ~ method,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Parameter Estimate",
x = "Number of Exposure Replicates for 5 Individuals",
fill = "Method",
color = "Method") +
theme_bw() +
theme(legend.position = "bottom")
sim.out.long %>%
mutate(k = factor(k)) %>%
ggplot(aes(x = k, y = ghat, group = k)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = g.true),
linetype = "dashed",
color = "orange") +
facet_grid(n ~ method,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Parameter Estimate",
x = "Number of Exposure Replicates for 5 Individuals",
fill = "Method",
color = "Method") +
theme_bw() +
theme(legend.position = "bottom")
plot <- sim.out.long %>%
filter(param == 2,
!is.na(ghat)) %>%
mutate(k = factor(k)) %>%
ggplot(aes(x = k, y = ghat, group = k)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = g.true),
linetype = "dashed",
color = "orange") +
facet_grid(n ~ method,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Parameter Estimate",
x = "Number of Exposure Replicates for 5 Individuals",
fill = "Method",
color = "Method") +
theme_bw() +
theme(legend.position = "bottom")
plot
plot <- sim.out.long %>%
filter(param == 2,
!is.na(ghat)) %>%
mutate(k = factor(k)) %>%
ggplot(aes(x = k, y = ghat, group = k)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = g.true),
linetype = "dashed",
color = "orange") +
facet_grid(n ~ ,
plot <- sim.out.long %>%
filter(param == 2,
!is.na(ghat)) %>%
mutate(k = factor(k)) %>%
ggplot(aes(x = k, y = ghat, group = k)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = g.true),
linetype = "dashed",
color = "orange") +
facet_grid(~n,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Parameter Estimate",
x = "Number of Exposure Replicates for 5 Individuals",
fill = "Method",
color = "Method") +
theme_bw() +
theme(legend.position = "bottom")
plot
plot <- sim.out.long %>%
filter(param == 2,
!is.na(ghat)) %>%
mutate(k = factor(k)) %>%
ggplot(aes(x = k, y = ghat, group = k)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = g.true),
linetype = "dashed",
color = "orange") +
facet_grid(~n, cols = 1,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Parameter Estimate",
x = "Number of Exposure Replicates for 5 Individuals",
fill = "Method",
color = "Method") +
theme_bw() +
theme(legend.position = "bottom")
plot <- sim.out.long %>%
filter(param == 2,
!is.na(ghat)) %>%
mutate(k = factor(k)) %>%
ggplot(aes(x = k, y = ghat, group = k)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = g.true),
linetype = "dashed",
color = "orange") +
facet_grid(~n, ncol = 1,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Parameter Estimate",
x = "Number of Exposure Replicates for 5 Individuals",
fill = "Method",
color = "Method") +
theme_bw() +
theme(legend.position = "bottom")
plot <- sim.out.long %>%
filter(param == 2,
!is.na(ghat)) %>%
mutate(k = factor(k)) %>%
ggplot(aes(x = k, y = ghat, group = k)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = g.true),
linetype = "dashed",
color = "orange") +
facet_grid(~n, ncols = 1,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Parameter Estimate",
x = "Number of Exposure Replicates for 5 Individuals",
fill = "Method",
color = "Method") +
theme_bw() +
theme(legend.position = "bottom")
plot <- sim.out.long %>%
filter(param == 2,
!is.na(ghat)) %>%
mutate(k = factor(k)) %>%
ggplot(aes(x = k, y = ghat, group = k)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = g.true),
linetype = "dashed",
color = "orange") +
facet_grid(n~.,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Parameter Estimate",
x = "Number of Exposure Replicates for 5 Individuals",
fill = "Method",
color = "Method") +
theme_bw() +
theme(legend.position = "bottom")
plot
plot <- sim.out.long %>%
filter(param == 2,
!is.na(ghat)) %>%
mutate(k = factor(k)) %>%
ggplot(aes(x = k, y = ghat, group = k)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = g.true),
linetype = "dashed",
color = "orange") +
facet_grid(~n,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Parameter Estimate",
x = "Number of Exposure Replicates for 5 Individuals",
fill = "Method",
color = "Method") +
theme_bw() +
theme(legend.position = "bottom")
plot
sim.out.long %>%
filter(param == 2,
!is.na(ghat)) %>%
pivot_longer(cols = ends_with(".cov"),
names_to = "ci.type",
values_to = "ci.cov") %>%
mutate(ci.type = ifelse(ci.type == "bcci.cov", "Bias-Corrected", "Uncorrected")) %>%
group_by(k, n, ci.type) %>%
summarise(cov = mean(ci.cov, na.rm = T)) %>%
ggplot(aes(x = k,
linetype = ci.type,
y = cov)) +
geom_line() +
geom_hline(yintercept = 0.95,
linetype = "dashed",
color = "orange") +
facet_grid(n ~ method,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Coverage Probability",
x = "Number of Exposure Replicates for 5 Individuals",
linetype = "CI Type") +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_dark,
labels = method.labs)
sim.out.long %>%
filter(param == 2,
!is.na(ghat)) %>%
pivot_longer(cols = ends_with(".cov"),
names_to = "ci.type",
values_to = "ci.cov") %>%
mutate(ci.type = ifelse(ci.type == "bcci.cov", "Bias-Corrected", "Uncorrected")) %>%
group_by(k, n, ci.type) %>%
summarise(cov = mean(ci.cov, na.rm = T)) %>%
ggplot(aes(x = k,
linetype = ci.type,
y = cov)) +
geom_line() +
geom_hline(yintercept = 0.95,
linetype = "dashed",
color = "orange") +
facet_grid(n ~ method,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Coverage Probability",
x = "Number of Exposure Replicates for 5 Individuals",
linetype = "CI Type") +
theme_bw() +
theme(legend.position = "bottom")
sim.out.long %>%
filter(param == 2,
!is.na(ghat)) %>%
pivot_longer(cols = ends_with(".cov"),
names_to = "ci.type",
values_to = "ci.cov") %>%
mutate(ci.type = ifelse(ci.type == "bcci.cov", "Bias-Corrected", "Uncorrected")) %>%
group_by(k, n, ci.type) %>%
summarise(cov = mean(ci.cov, na.rm = T)) %>%
ggplot(aes(x = k,
linetype = ci.type,
y = cov)) +
geom_line() +
geom_hline(yintercept = 0.95,
linetype = "dashed",
color = "orange") +
facet_grid(~n,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Coverage Probability",
x = "Number of Exposure Replicates for 5 Individuals",
linetype = "CI Type") +
theme_bw() +
theme(legend.position = "bottom")
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
library(kableExtra)
library(devtools)
load_all()
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0("sim_data/gfmla_bige_data/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
# true estimands
g <- c(-2, 0.7, -0.6, 0.4, -0.4, -0.2)          # outcome model parameters
a <- 3                                      # exposure value of interest
EYa.true <- 0.4 * inv.logit(-2 + 0.7 * a) +     # true dose response curve at a
0.4 * inv.logit(-2.6 + 0.3 * a) +
0.1 * inv.logit(-1.6 + 0.5 * a) +
0.1 * inv.logit(-2.2 + 0.1 * a)
# number of sims per setting
n.rep <- nrow(sim.out) / n_distinct(dplyr::select(sim.out, n, B, vare))
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with("est") |
starts_with("ste") |
starts_with("bcs"),
names_to = "method.aa",
values_to = "val") %>%
mutate(method = factor(substr(method.aa, 5, 6),
levels = c("OG", "NG", "CG"),
labels = c("Oracle G-Formula",
"Naive G-Formula",
"G-Formula CS")),
aa = factor(substr(method.aa, 8, 8)),
a = factor(a[aa]),
name = factor(substr(method.aa, 1, 3)),
EYa.true = EYa.true[aa],
reliab = 0.6625 / (0.6625 + vare)) %>%
dplyr::select(-method.aa) %>%
group_by(clust, n, B, reliab, method, aa, a, name) %>%
mutate(id = row_number()) %>%
pivot_wider(names_from = name,
values_from = val,
id_cols = c(clust, n, B, reliab, method, aa, a, EYa.true, id)) %>%
mutate(ci.lower = est - qnorm(0.975) * ste,
ci.upper = est + qnorm(0.975) * ste,
ci.cov = EYa.true >= ci.lower & EYa.true <= ci.upper,
bcci.lower = est - qnorm(0.975) * bcs,
bcci.upper = est + qnorm(0.975) * bcs,
bcci.cov = EYa.true >= bcci.lower & EYa.true <= bcci.upper)
# summarize proportion of missing data by setting
ftc.dat <- sim.out.long %>%
filter(aa == 1) %>%
group_by(method, n, B, reliab) %>%
summarise(prop.error = mean(is.na(est)))
ftc.dat %>%
filter(prop.error > 0) %>%
ungroup()
# extract simulation parameters
n <- unique(sim.out$n)
# make labels for plots
method.labs <- c("Oracle G-Formula",
"Naive G-Formula",
"G-Formula CS")
names(method.labs) <- c("OG", "NG", "CG")
n.labs <- paste0("n = ", n)
names(n.labs) <- n
a.labs <- paste0("a = ", a)
names(a.labs) <- a
reliab.lab = unique(round(sim.out.long$reliab, 2))
reliab.lab[seq(2, n_distinct(reliab.lab), 2)] <- ""
# colorblind friendly pallette
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
# create plots
make.plot <- function(title = F) {
plot <- sim.out.long %>%
mutate(reliab = factor(reliab)) %>%
ggplot(aes(x = reliab, y = est, group = reliab)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = EYa.true),
linetype = "dashed",
color = "orange") +
facet_grid(n ~ method,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Parameter Estimate",
x = "Exposure Reliability",
fill = "Method",
color = "Method") +
theme_bw() +
theme(legend.position = "bottom") +
scale_x_discrete(labels = reliab.lab) +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs)
if (title) {
plot <- plot +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting"))
}
return(plot)
}
View(sim.out.long)
View(sim.out.long)
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
library(kableExtra)
library(devtools)
load_all()
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0("sim_data/gfmla_bige_data/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
# true estimands
g <- c(-2, 0.7, -0.6, 0.4, -0.4, -0.2)          # outcome model parameters
a <- 3                                      # exposure value of interest
EYa.true <- 0.4 * inv.logit(-2 + 0.7 * a) +     # true dose response curve at a
0.4 * inv.logit(-2.6 + 0.3 * a) +
0.1 * inv.logit(-1.6 + 0.5 * a) +
0.1 * inv.logit(-2.2 + 0.1 * a)
# number of sims per setting
n.rep <- nrow(sim.out) / n_distinct(dplyr::select(sim.out, n, B, vare))
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with("est") |
starts_with("ste") |
starts_with("bcs"),
names_to = "method.aa",
values_to = "val") %>%
mutate(method = factor(substr(method.aa, 5, 6),
levels = c("OG", "NG", "CG"),
labels = c("Oracle G-Formula",
"Naive G-Formula",
"G-Formula CS")),
aa = factor(substr(method.aa, 8, 8)),
a = factor(a[aa]),
name = factor(substr(method.aa, 1, 3)),
EYa.true = EYa.true[aa],
reliab = 0.6625 / (0.6625 + vare)) %>%
dplyr::select(-method.aa) %>%
group_by(clust, n, B, reliab, method, aa, a, name) %>%
mutate(id = row_number()) %>%
pivot_wider(names_from = name,
values_from = val,
id_cols = c(clust, n, B, reliab, method, aa, a, EYa.true, id)) %>%
mutate(ci.lower = est - qnorm(0.975) * ste,
ci.upper = est + qnorm(0.975) * ste,
ci.cov = EYa.true >= ci.lower & EYa.true <= ci.upper,
bcci.lower = est - qnorm(0.975) * bcs,
bcci.upper = est + qnorm(0.975) * bcs,
bcci.cov = EYa.true >= bcci.lower & EYa.true <= bcci.upper)
# summarize proportion of missing data by setting
ftc.dat <- sim.out.long %>%
filter(aa == 1) %>%
group_by(method, n, B, reliab) %>%
summarise(prop.error = mean(is.na(est)))
ftc.dat %>%
filter(prop.error > 0) %>%
ungroup()
# extract simulation parameters
n <- unique(sim.out$n)
# make labels for plots
method.labs <- c("Oracle G-Formula",
"Naive G-Formula",
"G-Formula CS")
names(method.labs) <- c("OG", "NG", "CG")
n.labs <- paste0("n = ", n)
names(n.labs) <- n
a.labs <- paste0("a = ", a)
names(a.labs) <- a
reliab.lab = unique(round(sim.out.long$reliab, 2))
reliab.lab[seq(2, n_distinct(reliab.lab), 2)] <- ""
# colorblind friendly pallette
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
# create plots
make.plot <- function(title = F) {
plot <- sim.out.long %>%
filter(method != "Oracle G-Formula") %>%
mutate(reliab = factor(reliab)) %>%
ggplot(aes(x = reliab, y = est, group = reliab)) +
geom_boxplot(width = 0.7, outlier.size = 0.5) +
geom_hline(aes(yintercept = EYa.true),
linetype = "dashed",
color = "orange") +
facet_grid(n ~ method,
scales = "free",
labeller = labeller(n = n.labs)) +
labs(y = "Parameter Estimate",
x = "Exposure Reliability",
fill = "Method",
color = "Method") +
theme_bw() +
theme(legend.position = "bottom") +
scale_x_discrete(labels = reliab.lab)
if (title) {
plot <- plot +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting"))
}
return(plot)
}
make.plot()
# save plot
ggsave("sim_figures/gfmla_sim_bige_plot_1.png",
width = 6,
height = 4,
dpi = 300)
