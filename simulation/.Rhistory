rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
library(kableExtra)
library(devtools)
load_all()
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0("sim_data/gfmla_data/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
# true estimands
g <- c(-2, 0.7, -0.6, 0.4, -0.4, -0.2)          # outcome model parameters
a <- 0:4                                       # exposure value of interest
EYa.true <- 0.4 * inv.logit(-2 + 0.7 * a) +    # true dose response curve at a
0.4 * inv.logit(-2.6 + 0.3 * a) +
0.1 * inv.logit(-1.6 + 0.5 * a) +
0.1 * inv.logit(-2.2 + 0.1 * a)
# number of sims per setting
n.rep <- nrow(sim.out) / n_distinct(dplyr::select(sim.out, n, B, vare))
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with("est") | starts_with("ste"),
names_to = "method.aa",
values_to = "val") %>%
mutate(method = factor(substr(method.aa, 5, 6),
levels = c("OL", "OG",
"NL", "NG",
"CL", "CG")),
aa = factor(substr(method.aa, 8, 8)),
a = factor(a[aa]),
name = factor(substr(method.aa, 1, 3)),
EYa.true = EYa.true[aa]) %>%
dplyr::select(-method.aa) %>%
group_by(clust, n, B, vare, method, aa, a, name) %>%
mutate(id = row_number()) %>%
pivot_wider(names_from = name,
values_from = val,
id_cols = c(clust, n, B, vare, method, aa, a, EYa.true, id))
# summarize proportion of missing data by setting
sim.out.long %>%
filter(aa == 1) %>%
group_by(method, n, B, vare) %>%
summarise(prop.error = mean(is.na(est))) %>%
filter(prop.error > 0) %>%
ungroup()
tbl.a3 <- sim.out.long %>%
filter(a == 3,
n == 800,
vare == 0.25) %>%
group_by(method)
tbl.a3 <- sim.out.long %>%
filter(a == 3,
n == 800,
vare == 0.25) %>%
group_by(method) %>%
summarise(bias = mean(est - EYa.true, na.rm = T),
emp.se = sd(est, na.rm = T),
est.se = mean(ste, na.rm = T))
View(tbl.a3)
tbl.a3 <- sim.out.long %>%
filter(a == 3,
n == 800,
vare == 0.25) %>%
group_by(method) %>%
summarise(bias = mean(est - EYa.true, na.rm = T),
emp.se = sd(est, na.rm = T),
est.se = mean(ste, na.rm = T),
mse = mean(est - EYa.true))
setNames(tbl.a3, sub(".+_", "", names(tbl)))
setNames(tbl.a3, sub(".+_", "", names(tbl.a3)))
tbl.a3 <- sim.out.long %>%
filter(a == 3,
n == 800,
vare == 0.25) %>%
group_by(method) %>%
summarise(bias = mean(est - EYa.true, na.rm = T),
emp.se = sd(est, na.rm = T),
est.se = mean(ste, na.rm = T),
mse = mean(est - EYa.true))
tbl.a3 %>%
kable(digits = 3,
col.names = c("Method", "Bias", "ESE", "ASE", "MSE")) %>%
kable_styling("striped")
tbl <- sim.out.long %>%
group_by(a, method, n, B, vare) %>%
summarise(bias = mean(est - EYa.true, na.rm = T),
emp.se = sd(est, na.rm = T),
est.se = mean(ste, na.rm = T)) %>%
gather(key, value, bias:est.se) %>%
unite(Group, a, key) %>%
spread(Group, value)
setNames(tbl, sub(".+_", "", names(tbl))) %>%
kable(digits = 3) %>%
kable_styling("striped") %>%
add_header_above(c(" " = 4,
"E{Y(0)}" = 3,
"E{Y(1)}" = 3,
"E{Y(2)}" = 3,
"E{Y(3)}" = 3,
"E{Y(4)}" = 3))
tbl.a3 %>%
kable(digits = 3,
col.names = c("Method", "Bias", "ESE", "ASE", "MSE"),
caption = "a = 3, n = 800, vare = 0.25") %>%
kable_styling("striped")
tbl.a3 %>%
kable(digits = 3,
col.names = c("Method", "Bias", "ESE", "ASE", "MSE"),
caption = "Estimated E{Y(a)} for a = 3, n = 800, vare = 0.25") %>%
kable_styling("striped")
tbl.a3.n8k <- sim.out.long %>%
filter(a == 3,
n == 8000,
vare == 0.25) %>%
group_by(method) %>%
summarise(bias = mean(est - EYa.true, na.rm = T),
emp.se = sd(est, na.rm = T),
est.se = mean(ste, na.rm = T),
mse = mean(est - EYa.true))
tbl.a3.n8k %>%
kable(digits = 3,
col.names = c("Method", "Bias", "ESE", "ASE", "MSE"),
caption = "Estimated E{Y(a)} for a = 3, n = 8000, vare = 0.25") %>%
kable_styling("striped")
tbl.a3.n8k <- sim.out.long %>%
filter(a == 3,
n == 8000,
vare == 0.25) %>%
group_by(method) %>%
summarise(bias = mean(est - EYa.true, na.rm = T),
emp.se = sd(est, na.rm = T),
est.se = mean(ste, na.rm = T),
mse = mean(est - EYa.true))
tbl.a3.n8k %>%
kable(digits = 4,
col.names = c("Method", "Bias", "ESE", "ASE", "MSE"),
caption = "Estimated E{Y(a)} for a = 3, n = 8000, vare = 0.25") %>%
kable_styling("striped")
methods()
# separate plots for each sample size
plot.by.a <- function(a., methods = c("OL", "NL", "CL",
"OG", "NG", "CG")) {
ggplot(
data = filter(sim.out.long,
a == a.,
method %in% methods),
aes(x = method,
y = est,
fill = method,
color = method)) +
geom_boxplot() +
stat_summary(fun = mean,
geom = "point",
shape = 8,
size = 2,
orientation = "x",
show.legend = F) +
geom_hline(aes(yintercept = EYa.true),
linetype = "dashed",
color = "orange") +
facet_grid(vare ~ n,
scales = "free",
labeller = labeller(n = n.labs,
vare = vare.labs)) +
labs(y = "Parameter Estimate",
fill = "Method",
color = "Method") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0("a = ", a., "; ",
n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs)
}
plot.by.a(a. = 0)
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
library(kableExtra)
library(devtools)
load_all()
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0("sim_data/gfmla_data/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
# true estimands
g <- c(-2, 0.7, -0.6, 0.4, -0.4, -0.2)          # outcome model parameters
a <- 0:4                                       # exposure value of interest
EYa.true <- 0.4 * inv.logit(-2 + 0.7 * a) +    # true dose response curve at a
0.4 * inv.logit(-2.6 + 0.3 * a) +
0.1 * inv.logit(-1.6 + 0.5 * a) +
0.1 * inv.logit(-2.2 + 0.1 * a)
# number of sims per setting
n.rep <- nrow(sim.out) / n_distinct(dplyr::select(sim.out, n, B, vare))
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with("est") | starts_with("ste"),
names_to = "method.aa",
values_to = "val") %>%
mutate(method = factor(substr(method.aa, 5, 6),
levels = c("OL", "OG",
"NL", "NG",
"CL", "CG")),
aa = factor(substr(method.aa, 8, 8)),
a = factor(a[aa]),
name = factor(substr(method.aa, 1, 3)),
EYa.true = EYa.true[aa]) %>%
dplyr::select(-method.aa) %>%
group_by(clust, n, B, vare, method, aa, a, name) %>%
mutate(id = row_number()) %>%
pivot_wider(names_from = name,
values_from = val,
id_cols = c(clust, n, B, vare, method, aa, a, EYa.true, id))
# summarize proportion of missing data by setting
sim.out.long %>%
filter(aa == 1) %>%
group_by(method, n, B, vare) %>%
summarise(prop.error = mean(is.na(est))) %>%
filter(prop.error > 0) %>%
ungroup()
# extract simulation parameters
n <- unique(sim.out$n)
B <- unique(sim.out$B)
vare <- unique(sim.out$vare)
# make labels for plots
method.labs <- c("Oracle GLM",
"Naive GLM",
"Corrected GLM",
"Oracle G-Formula",
"Naive G-Formula",
"Corrected G-Formula")
names(method.labs) <- c("OL", "NL", "CL",
"OG", "NG", "CG")
n.labs <- paste0("n = ", n)
names(n.labs) <- n
B.labs <- paste0("B = ", B)
names(B.labs) <- B
a.labs <- paste0("a = ", a)
names(a.labs) <- a
vare.labs <- paste0("sigma_e = ", vare)
names(vare.labs) <- vare
# colorblind friendly pallette
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
# separate plots for each sample size
plot.by.a <- function(a., methods = c("OL", "NL", "CL",
"OG", "NG", "CG")) {
ggplot(
data = filter(sim.out.long,
a == a.,
method %in% methods),
aes(x = method,
y = est,
fill = method,
color = method)) +
geom_boxplot() +
stat_summary(fun = mean,
geom = "point",
shape = 8,
size = 2,
orientation = "x",
show.legend = F) +
geom_hline(aes(yintercept = EYa.true),
linetype = "dashed",
color = "orange") +
facet_grid(vare ~ n,
scales = "free",
labeller = labeller(n = n.labs,
vare = vare.labs)) +
labs(y = "Parameter Estimate",
fill = "Method",
color = "Method") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0("a = ", a., "; ",
n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs)
}
plot.by.a(a. = 0)
plot.by.a(a. = 1)
plot.by.a(a. = 2)
plot.by.a(a. = 3)
plot.by.a(a. = 4)
plot.by.a(a. = 0) + ylim(-3, 1)
plot.by.a(a. = 1) + ylim(-2, 0.5)
plot.by.a(a. = 2) + ylim(-1, 1)
plot.by.a(a. = 3) + ylim(-0.5, 1)
plot.by.a(a. = 4) + ylim(-1, 2)
method.labs
vare
# separate plots for each sample size
plot.by.a <- function(a.,
method. = names(method.labs),
n. = n,
vare. = vare) {
ggplot(
data = filter(sim.out.long,
a == a.,
method %in% methods,
n %in% n.,
vare %in% vare.),
aes(x = method,
y = est,
fill = method,
color = method)) +
geom_boxplot() +
stat_summary(fun = mean,
geom = "point",
shape = 8,
size = 2,
orientation = "x",
show.legend = F) +
geom_hline(aes(yintercept = EYa.true),
linetype = "dashed",
color = "orange") +
facet_grid(vare ~ n,
scales = "free",
labeller = labeller(n = n.labs,
vare = vare.labs)) +
labs(y = "Parameter Estimate",
fill = "Method",
color = "Method") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0("a = ", a., "; ",
n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs)
}
plot.by.a(a. = 0)
# separate plots for each sample size
plot.by.a <- function(a.,
method. = names(method.labs),
n. = n,
vare. = vare) {
ggplot(
data = filter(sim.out.long,
a == a.,
method %in% method.,
n %in% n.,
vare %in% vare.),
aes(x = method,
y = est,
fill = method,
color = method)) +
geom_boxplot() +
stat_summary(fun = mean,
geom = "point",
shape = 8,
size = 2,
orientation = "x",
show.legend = F) +
geom_hline(aes(yintercept = EYa.true),
linetype = "dashed",
color = "orange") +
facet_grid(vare ~ n,
scales = "free",
labeller = labeller(n = n.labs,
vare = vare.labs)) +
labs(y = "Parameter Estimate",
fill = "Method",
color = "Method") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0("a = ", a., "; ",
n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs)
}
plot.by.a(a. = 0)
plot.by.a(a. = 3, method. = c("OG", "NG", "CG"), n. = 800, vare. = 0.25)
