ggplot(
data = dat,
aes(x = A,
fill = as.factor(pv))) +
geom_histogram() +
facet_nested(L1 ~ L2, labeller = label_both) +
xlim(1, 4)
ggplot(
data = dat,
aes(x = A,
fill = va)) +
geom_histogram() +
facet_nested(L1 ~ L2, labeller = label_both) +
xlim(1, 4)
ggplot(
data = dat,
aes(x = A,
fill = va)) +
geom_histogram() +
facet_nested(L1 ~ L2) +
xlim(1, 4)
dat <- rbind(
data.frame(va = 0.6, L1, L2, A = A),
data.frame(va = 0.35, L1, L2, A = AA)) %>%
mutate(VA = paste0("Var(A|L) = ", va),
L1 = paste0("L_1 = ", L1),
L2 = paste0("L_2 = ", L2))
# plot positivity violation data only
ggplot(
data = filter(dat, va == 0.35),
aes(x = A,
y = ..count.. / sum(..count..))) +
geom_histogram() +
facet_grid(L1 ~ L2) +
xlim(1, 4) +
ylab("Count")
# plot positivity violation data only
ggplot(
data = filter(dat, va == 0.35),
aes(x = A,
y = ..count.. / sum(..count..))) +
geom_histogram() +
facet_grid(L1 ~ L2) +
xlim(1, 4) +
ylab("Proportion")
dat <- rbind(
data.frame(va = 0.6, L1, L2, A = A),
data.frame(va = 0.35, L1, L2, A = AA)) %>%
mutate(VA = paste0("Var(A|L) = ", va),
L1 = paste0("L\\U+2081 = ", L1),
L2 = paste0("L_2 = ", L2))
set.seed(1)
n <- 1E4                                                      # sample size
L1 <- rbinom(n, 1, 0.5)                                        # confounder 1
L2 <- rbinom(n, 1, 0.2)                                        # confounder 2
A <- rnorm(n, 2 + 0.3*L1 - 0.5*L2, sqrt(0.6))                  # no violation
AA <- rnorm(n, 2 + 0.3*L1 - 0.5*L2, sqrt(0.35))                # near violation
dat <- rbind(
data.frame(va = 0.6, L1, L2, A = A),
data.frame(va = 0.35, L1, L2, A = AA)) %>%
mutate(VA = paste0("Var(A|L) = ", va),
L1 = paste0("L\\U+2081 = ", L1),
L2 = paste0("L_2 = ", L2))
# plot data
ggplot(
data = dat,
aes(x = A,
y = ..count.. / sum(..count..))) +
geom_histogram() +
facet_nested(VA ~ L1 + L2) +
xlim(1, 4) +
ylab("Proportion")
dat <- rbind(
data.frame(va = 0.6, L1, L2, A = A),
data.frame(va = 0.35, L1, L2, A = AA)) %>%
mutate(VA = paste0("Var(A|L) = ", va),
L1 = paste0("L\u+2081 = ", L1),
dat <- rbind(
data.frame(va = 0.6, L1, L2, A = A),
data.frame(va = 0.35, L1, L2, A = AA)) %>%
mutate(VA = paste0("Var(A|L) = ", va),
L1 = sprintf(paste0("L\u+2081 = ", L1)),
dat <- rbind(
data.frame(va = 0.6, L1, L2, A = A),
data.frame(va = 0.35, L1, L2, A = AA)) %>%
mutate(VA = paste0("Var(A|L) = ", va),
L1 = paste0(sprintf("L\u+2081 = "), L1),
dat <- rbind(
data.frame(va = 0.6, L1, L2, A = A),
data.frame(va = 0.35, L1, L2, A = AA)) %>%
mutate(VA = paste0("Var(A|L) = ", va),
L1 = paste0(sprintf("L\u+208x1 = "), L1),
dat <- rbind(
data.frame(va = 0.6, L1, L2, A = A),
data.frame(va = 0.35, L1, L2, A = AA)) %>%
mutate(VA = paste0("Var(A|L) = ", va),
L1 = paste0(sprintf("L\u2081 = "), L1),
L2 = paste0("L_2 = ", L2))
# plot data
ggplot(
data = dat,
aes(x = A,
y = ..count.. / sum(..count..))) +
geom_histogram() +
facet_nested(VA ~ L1 + L2) +
xlim(1, 4) +
ylab("Proportion")
dat <- rbind(
data.frame(va = 0.6, L1, L2, A = A),
data.frame(va = 0.35, L1, L2, A = AA)) %>%
mutate(VA = paste0("Var(A|L) = ", va),
L1 = paste0("L\u2081 = ", L1),
L2 = paste0("L_2 = ", L2))
# plot data
ggplot(
data = dat,
aes(x = A,
y = ..count.. / sum(..count..))) +
geom_histogram() +
facet_nested(VA ~ L1 + L2) +
xlim(1, 4) +
ylab("Proportion")
dat <- rbind(
data.frame(va = 0.6, L1, L2, A = A),
data.frame(va = 0.35, L1, L2, A = AA)) %>%
mutate(VA = paste0("Var(A|L) = ", va),
L1 = paste0("L\u2081 = ", L1),
L2 = paste0("L\u2082 = ", L2))
# plot data
ggplot(
data = dat,
aes(x = A,
y = ..count.. / sum(..count..))) +
geom_histogram() +
facet_nested(VA ~ L1 + L2) +
xlim(1, 4) +
ylab("Proportion")
dat <- rbind(
data.frame(va = 0.6, L1, L2, A = A),
data.frame(va = 0.35, L1, L2, A = AA)) %>%
mutate(VA = paste0("Var(A|L) = ", va),
L1 = factor(paste0("L\u2081 = ", L1)),
L2 = factor(paste0("L\u2082 = ", L2)))
# plot data
ggplot(
data = dat,
aes(x = A,
y = ..count.. / sum(..count..))) +
geom_histogram() +
facet_nested(VA ~ L1 + L2) +
xlim(1, 4) +
ylab("Proportion")
# plot positivity violation data only
ggplot(
data = filter(dat, va == 0.35),
aes(x = A,
y = ..count.. / sum(..count..))) +
geom_histogram() +
facet_grid(L1 ~ L2) +
xlim(1, 4) +
ylab("Proportion")
dat <- rbind(
data.frame(va = 0.6, L1, L2, A = A),
data.frame(va = 0.35, L1, L2, A = AA)) %>%
mutate(VA = paste0("Var(A|L) = ", va),
L1 = factor(paste0("L1 = ", L1)),
L2 = factor(paste0("L2 = ", L2)))
# plot data
ggplot(
data = dat,
aes(x = A,
y = ..count.. / sum(..count..))) +
geom_histogram() +
facet_nested(VA ~ L1 + L2) +
xlim(1, 4) +
ylab("Proportion")
# plot positivity violation data only
ggplot(
data = filter(dat, va == 0.35),
aes(x = A,
y = ..count.. / sum(..count..))) +
geom_histogram() +
facet_grid(L1 ~ L2) +
xlim(1, 4) +
ylab("Proportion")
getwd()
ggsave("sim_figures/gfmla_positivity_violation_setup.png",
width = 6,
height = 4,
dpi = 300)
# generate data w/ and w/out near positivity violation
set.seed(1)
n <- 1E6                                                       # sample size
L1 <- rbinom(n, 1, 0.5)                                        # confounder 1
L2 <- rbinom(n, 1, 0.2)                                        # confounder 2
A <- rnorm(n, 2 + 0.3*L1 - 0.5*L2, sqrt(0.6))                  # no violation
AA <- rnorm(n, 2 + 0.3*L1 - 0.5*L2, sqrt(0.35))                # near violation
dat <- rbind(
data.frame(va = 0.6, L1, L2, A = A),
data.frame(va = 0.35, L1, L2, A = AA)) %>%
mutate(VA = paste0("Var(A|L) = ", va),
L1 = factor(paste0("L1 = ", L1)),
L2 = factor(paste0("L2 = ", L2)))
# plot data
ggplot(
data = dat,
aes(x = A,
y = ..count.. / sum(..count..))) +
geom_histogram() +
facet_nested(VA ~ L1 + L2) +
xlim(1, 4) +
ylab("Proportion")
# plot positivity violation data only
ggplot(
data = filter(dat, va == 0.35),
aes(x = A,
y = ..count.. / sum(..count..))) +
geom_histogram() +
facet_grid(L1 ~ L2) +
xlim(1, 4) +
ylab("Proportion")
ggsave("sim_figures/gfmla_positivity_violation_setup.png",
width = 6,
height = 4,
dpi = 300)
ggplot(
data = filter(dat, va == 0.35),
aes(x = A,
y = ..count.. / sum(..count..))) +
geom_histogram() +
facet_grid(L1 ~ L2) +
xlim(1, 4) +
ylab("Proportion") +
theme_bw()
ggsave("sim_figures/gfmla_positivity_violation_setup.png",
width = 6,
height = 4,
dpi = 300)
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
library(kableExtra)
library(devtools)
load_all()
# true estimand
g <- 0.75
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0("sim_data/dr_data/v3/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list) %>%
mutate(g.true = g,
ci.lower = est - qnorm(0.975) * se,
ci.upper = est + qnorm(0.975) * se,
ci.cov = g.true >= ci.lower & g.true <= ci.upper,
bcci.lower = est - qnorm(0.975) * bse,
bcci.upper = est + qnorm(0.975) * bse,
bcci.cov = g.true >= bcci.lower & g.true <= bcci.upper,
method = factor(method,
levels = c("gfmla", "ipw", "dr"),
labels = c("G-Formula", "IPW", "DR")),
type = factor(type,
levels = c("oracle", "naive", "mccs"),
labels = c("Oracle", "Naive", "MCCS")),
spec = factor(ifelse(ps == 0 & out == 0, "PS and OR",
ifelse(ps == 0 & out == 1, "PS",
ifelse(ps == 1 & out == 0, "OR", ""))),
levels = c("PS and OR", "PS", "OR", "")),
ps = factor(ps,
levels = c(0, 1),
labels = c("PS Correct", "PS Incorrect")),
out = factor(out,
levels = c(0, 1),
labels = c("Outcome Correct", "Outcome Incorrect")))
# number of sims per setting
n.rep <- nrow(sim.out) /
n_distinct(dplyr::select(sim.out, n, method, type, ps, out))
# summarize proportion of missing data by setting
sim.out %>%
group_by(n, method, type, ps, out) %>%
summarise(prop.error = mean(is.na(est))) %>%
filter(prop.error > 0) %>%
ungroup()
# colorblind friendly pallette
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
# separate plots for each sample size
make.plot <- function(n. = 2000) {
sim.out %>%
filter(n == n.) %>%
ggplot(aes(x = type,
y = est,
fill = type,
color = type)) +
geom_boxplot() +
geom_hline(yintercept = g,
linetype = "dashed",
color = "orange") +
facet_grid(method ~ ps + out, scales = "free") +
labs(y = "Parameter Estimate",
fill = "Type",
color = "Type") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0("n = ", n., "; ",
n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light) +
scale_color_manual(values = pal_dark)
}
make.plot(n. = 400)
make.plot(n. = 2000)
tbl <- sim.out %>%
filter(type == "MCCS",
n == 2000) %>%
group_by(spec, method) %>%
mutate(method = paste0(method, " CS")) %>%
summarise(bias = 100 * mean(est - g.true, na.rm = T),
emp.se = 100 * sd(est, na.rm = T),
est.se = 100 * mean(se),
ci.cov = 100 * mean(ci.cov, na.rm = T),
bcest.se = 100 * mean(bse, na.rm = T),
bcci.cov = 100 * mean(bcci.cov, na.rm = T))
kbl <- tbl %>%
kable(format = "latex",
align = c(rep("c", 2),
rep("r", 6)),
booktabs = TRUE,
linesep = c("", "", "\\addlinespace"),
escape = FALSE,
digits = c(0, 0,
1, 1, 1, 1, 1, 1),
col.names = c("Correct Specifications", "Method",
"Bias", "ESE", "ASE", "Cov", "ASE", "Cov"),
caption = "Estimated MSM Slope") %>%
add_header_above(c(" " = 4,
"UC" = 2,
"BC" = 2)) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE)
tbl
tbl2 <- sim.out %>%
filter(type == "MCCS",
n == 400) %>%
group_by(spec, method) %>%
mutate(method = paste0(method, " CS")) %>%
summarise(bias = 100 * mean(est - g.true, na.rm = T),
emp.se = 100 * sd(est, na.rm = T),
est.se = 100 * mean(se),
ci.cov = 100 * mean(ci.cov, na.rm = T),
bcest.se = 100 * mean(bse, na.rm = T),
bcci.cov = 100 * mean(bcci.cov, na.rm = T))
kbl2 <- tbl2 %>%
kable(format = "latex",
align = c(rep("c", 2),
rep("r", 6)),
booktabs = TRUE,
linesep = c("", "", "\\addlinespace"),
escape = FALSE,
digits = c(0, 0,
1, 1, 1, 1, 1, 1),
col.names = c("Correct Specifications", "Method",
"Bias", "ESE", "ASE", "Cov", "ASE", "Cov"),
caption = "Estimated MSM Slope") %>%
add_header_above(c(" " = 4,
"UC" = 2,
"BC" = 2)) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE)
tbl2
tbl3 <- sim.out %>%
filter(type == "MCCS" &
n == 400) %>%
mutate(Estimator = factor(paste0(gsub("Doubly Robust", "DR", method),
" CS"),
levels = c("G-Formula CS",
"IPW CS",
"DR CS"))) %>%
group_by(spec, Estimator) %>%
summarise(bias = 100 * mean(est - g, na.rm = T),
emp.se = 100 * sd(est, na.rm = T),
est.se = 100 * mean(se, na.rm = T),
ci.cov = 100 * mean(ci.cov, na.rm = T))
kbl3 <- tbl3 %>%
kable(format = "latex",
digits = 1,
align = c(rep("c", 2),
rep("r", 4)),
booktabs = TRUE,
linesep = c("", "", "\\addlinespace\\hline"),
escape = FALSE,
col.names = c("Correct Specifications", "Estimator",
"Bias", "ESE", "ASE", "Cov")) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE)
tbl2 <- sim.out %>%
filter(type == "MCCS",
n == 400) %>%
group_by(spec, method) %>%
mutate(method = paste0(method, " CS")) %>%
summarise(bias = 100 * mean(est - g.true, na.rm = T),
emp.se = 100 * sd(est, na.rm = T),
est.se = 100 * mean(se),
ci.cov = 100 * mean(ci.cov, na.rm = T),
bcest.se = 100 * mean(bse, na.rm = T),
bcci.cov = 100 * mean(bcci.cov, na.rm = T))
kbl2 <- tbl2 %>%
kable(format = "latex",
align = c(rep("c", 2),
rep("r", 6)),
booktabs = TRUE,
linesep = c("", "", "\\addlinespace"),
escape = FALSE,
digits = c(0, 0,
1, 1, 1, 1, 1, 1),
col.names = c("Correct Specifications", "Method",
"Bias", "ESE", "ASE", "Cov", "ASE", "Cov"),
caption = "Estimated MSM Slope") %>%
add_header_above(c(" " = 4,
"UC" = 2,
"BC" = 2)) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE)
tbl2
kbl2
bkl1
kbl1
kbl
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
library(devtools)
load_all()
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0("sim_data/gfmla_positivity_violation_2_data/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
# true estimands
g <- c(-2, 0.7, -0.6, 0.4, -0.4, -0.2)          # outcome model parameters
a <- as.numeric(dplyr::select(                  # exposure value of interest
sim.out, starts_with("a"))[1,])
EYa.true <- 0.4 * inv.logit(-2 + 0.7 * a) +     # true dose response curve at a
0.4 * inv.logit(-2.6 + 0.3 * a) +
0.1 * inv.logit(-1.6 + 0.5 * a) +
0.1 * inv.logit(-2.2 + 0.1 * a)
# number of sims per setting
n.rep <- nrow(sim.out) / n_distinct(dplyr::select(sim.out, n, B, vare))
# make long data frame
sim.out.long <- sim.out %>%
dplyr::select(!starts_with("a")) %>%
pivot_longer(cols = starts_with("OG") | starts_with("NG") | starts_with("CG"),
names_to = "method.aa",
values_to = "val") %>%
mutate(method = factor(substr(method.aa, 1, 2),
levels = c("OG", "NG", "CG"),
labels = c("Oracle G-Formula",
"Naive G-Formula",
"Corrected G-Formula")),
aa = as.numeric(gsub("[.]", "", substr(method.aa, 4, 5))),
a = a[aa],
EYa.true = EYa.true[aa]) %>%
dplyr::select(-method.aa)
# make summary data frame
sim.out.summary <- sim.out.long %>%
group_by(n, vare, B, method, a) %>%
summarise(bias = mean(val - EYa.true),
se = sd(val) / sqrt(n.rep),
bias.lower = bias - qnorm(0.975) * se,
bias.upper = bias + qnorm(0.975) * se)
# summarize proportion of missing data by setting
sim.out.long %>%
filter(aa == 1) %>%
group_by(method, n, B, vare) %>%
summarise(prop.error = mean(is.na(val))) %>%
filter(prop.error > 0) %>%
ungroup()
# colorblind friendly pallette
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
p <- sim.out.summary %>%
ggplot(
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper)) +
geom_point() +
geom_line() +
facet_grid(~ method) +
theme_bw() +
theme(legend.position = c(0.2, 0.3)) +
labs(color = "Method",
shape = "Method",
fill = "Method",
y = "Bias")
p
