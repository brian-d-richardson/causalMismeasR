library(tidyverse)
library(ggplot2)
library(ggh4x)
library(kableExtra)
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0("sim_data/ipw_nonadd_data/v2/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
# true MSM parameters
g <- c(0.45, 0.20, 0.15, 0.15)
# number of sims per setting
n.rep <- nrow(sim.out) / n_distinct(dplyr::select(sim.out, n, B, vare))
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with("ghat") |
starts_with("stde") |
starts_with("bste"),
names_to = "method.param",
values_to = "val") %>%
mutate(method = factor(substr(method.param, 6, 7),
levels = c("OI", "NI", "CI"),
labels = c("Oracle IPW",
"Naive IPW",
"Corrected IPW")),
param = factor(substr(method.param, 9, 9)),
name = factor(substr(method.param, 1, 4)),
g.true = g[param]) %>%
dplyr::select(-method.param) %>%
group_by(clust, n, B, vare, method, param, name) %>%
mutate(id = row_number()) %>%
pivot_wider(names_from = name,
values_from = val,
id_cols = c(clust, n, B, vare, method,
param, g.true, id)) %>%
mutate(ci.lower = ghat - qnorm(0.975) * stde,
ci.upper = ghat + qnorm(0.975) * stde,
ci.cov = g.true >= ci.lower & g.true <= ci.upper,
bcci.lower = ghat - qnorm(0.975) * bste,
bcci.upper = ghat + qnorm(0.975) * bste,
bcci.cov = g.true >= bcci.lower & g.true <= bcci.upper)
# summarize proportion of missing data by setting
sim.out.long %>%
filter(param == 1) %>%
group_by(method, n) %>%
summarise(prop.error = mean(is.na(ghat))) %>%
filter(prop.error > 0) %>%
ungroup()
# extract simulation parameters
n <- unique(sim.out$n)
# make labels for plots
n.labs <- paste0("n = ", n)
names(n.labs) <- n
param.labs <- paste0("\u03b3", c("0", "1", "2", "3"))
names(param.labs) <- 1:4
# colorblind friendly pallette
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
# create plots
make.plot <- function(title = T) {
plot <- ggplot(
data = sim.out.long,
aes(x = method,
y = ghat,
fill = method,
color = method)) +
geom_boxplot() +
stat_summary(fun = mean,
geom = "point",
shape = 8,
size = 2,
orientation = "x",
show.legend = F) +
geom_hline(aes(yintercept = g.true),
linetype = "dashed",
color = "orange") +
facet_grid(n ~ param,
scales = "free",
labeller = labeller(n = n.labs,
param = param.labs)) +
labs(y = "Parameter Estimate",
fill = "Method",
color = "Method") +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.position = "bottom") +
scale_fill_manual(values = pal_light) +
scale_color_manual(values = pal_dark)
if (title) {
plot <- plot +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting"))
}
return(plot)
}
make.plot()
tbl <- sim.out.long %>%
filter(n %in% c(800, 8000)) %>%
mutate(Param = paste0("$\\gamma_", as.numeric(param) - 1, "$")) %>%
group_by(n, method, Param) %>%
summarise(bias = 100 * mean(ghat - g.true, na.rm = T),
emp.se = 100 * sd(ghat, na.rm = T),
est.se = 100 * mean(stde),
ci.cov = 100 * mean(ci.cov, na.rm = T),
bcest.se = 100 * mean(bste, na.rm = T),
bcci.cov = 100 * mean(bcci.cov, na.rm = T))
kbl <- tbl %>%
kable(format = "latex",
digits = c(0, 0, 0,
1, 1,
1, 1,
1, 1),
align = c(rep("c", 3),
rep("r", 4)),
booktabs = TRUE,
linesep = c("", "", "", "\\addlinespace"),
escape = FALSE,
col.names = c("n", "Method", "Parameter",
"Bias", "ESE",
"ASE", "Cov",
"ASE", "Cov")) %>%
add_header_above(c(" " = 5,
"UC" = 2,
"BC" = 2)) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE)
tbl
kbl
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
library(kableExtra)
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0("sim_data/ipw_data/v3/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
# true MSM parameters
g <- c(0.45, 0.20, 0.15, 0.15)
# number of sims per setting
n.rep <- nrow(sim.out) / n_distinct(dplyr::select(sim.out, n, B, vare))
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with("ghat") |
starts_with("stde") |
starts_with("bste"),
names_to = "method.param",
values_to = "val") %>%
mutate(method = factor(substr(method.param, 6, 7),
levels = c("OI", "NI", "CI"),
labels = c("Oracle IPW",
"Naive IPW",
"IPW CS")),
param = factor(substr(method.param, 9, 9)),
name = factor(substr(method.param, 1, 4)),
g.true = g[param]) %>%
dplyr::select(-method.param) %>%
group_by(clust, n, B, vare, method, param, name) %>%
mutate(id = row_number()) %>%
pivot_wider(names_from = name,
values_from = val,
id_cols = c(clust, n, B, vare, method,
param, g.true, id)) %>%
mutate(ci.lower = ghat - qnorm(0.975) * stde,
ci.upper = ghat + qnorm(0.975) * stde,
ci.cov = g.true >= ci.lower & g.true <= ci.upper,
bcci.lower = ghat - qnorm(0.975) * bste,
bcci.upper = ghat + qnorm(0.975) * bste,
bcci.cov = g.true >= bcci.lower & g.true <= bcci.upper)
# summarize proportion of missing data by setting
sim.out.long %>%
filter(param == 1) %>%
group_by(method, n) %>%
summarise(prop.error = mean(is.na(ghat))) %>%
filter(prop.error > 0) %>%
ungroup()
# extract simulation parameters
n <- unique(sim.out$n)
# make labels for plots
n.labs <- paste0("n = ", n)
names(n.labs) <- n
param.labs <- paste0("\u03b3", c("0", "1", "2", "3"))
names(param.labs) <- 1:4
# colorblind friendly pallette
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
# create plots
make.plot <- function(title = T) {
plot <- ggplot(
data = sim.out.long,
aes(x = method,
y = ghat,
fill = method,
color = method)) +
geom_boxplot() +
stat_summary(fun = mean,
geom = "point",
shape = 8,
size = 2,
orientation = "x",
show.legend = F) +
geom_hline(aes(yintercept = g.true),
linetype = "dashed",
color = "orange") +
facet_grid(n ~ param,
scales = "free",
labeller = labeller(n = n.labs,
param = param.labs)) +
labs(y = "Parameter Estimate",
fill = "Method",
color = "Method") +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.position = "bottom") +
scale_fill_manual(values = pal_light) +
scale_color_manual(values = pal_dark)
if (title) {
plot <- plot +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting"))
}
return(plot)
}
make.plot()
kbl
tbl <- sim.out.long %>%
filter(n %in% c(800, 8000)) %>%
mutate(Param = paste0("$\\gamma_", as.numeric(param) - 1, "$")) %>%
group_by(n, method, Param) %>%
summarise(bias = 100 * mean(ghat - g.true, na.rm = T),
emp.se = 100 * sd(ghat, na.rm = T),
est.se = 100 * mean(stde),
ci.cov = 100 * mean(ci.cov, na.rm = T),
bcest.se = 100 * mean(bste, na.rm = T),
bcci.cov = 100 * mean(bcci.cov, na.rm = T))
kbl <- tbl %>%
kable(format = "latex",
digits = c(0, 0, 0,
1, 1,
1, 1,
1, 1),
align = c(rep("c", 3),
rep("r", 4)),
booktabs = TRUE,
linesep = c("", "", "", "\\addlinespace"),
escape = FALSE,
col.names = c("n", "Method", "Parameter",
"Bias", "ESE",
"ASE", "Cov",
"ASE", "Cov")) %>%
add_header_above(c(" " = 5,
"UC" = 2,
"BC" = 2)) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE)
tbl
kbl
tbl2 <- sim.out.long %>%
filter(n %in% c(400)) %>%
mutate(Param = paste0("$\\gamma_", as.numeric(param) - 1, "$")) %>%
group_by(n, method, Param) %>%
summarise(bias = 100 * mean(ghat - g.true, na.rm = T),
emp.se = 100 * sd(ghat, na.rm = T),
est.se = 100 * mean(stde),
ci.cov = 100 * mean(ci.cov, na.rm = T),
bcest.se = 100 * mean(bste, na.rm = T),
bcci.cov = 100 * mean(bcci.cov, na.rm = T))
kbl2 <- tbl2 %>%
kable(format = "latex",
digits = c(0, 0, 0,
1, 1,
1, 1,
1, 1),
align = c(rep("c", 3),
rep("r", 4)),
booktabs = TRUE,
linesep = c("", "", "", "\\addlinespace"),
escape = FALSE,
col.names = c("n", "Method", "Parameter",
"Bias", "ESE",
"ASE", "Cov",
"ASE", "Cov")) %>%
add_header_above(c(" " = 4,
"UC" = 2,
"BC" = 2)) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE)
tbl2
kbl2
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
library(kableExtra)
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0("sim_data/dr_cc_data/v3/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
# true E{Y(a)} values
a <- matrix(
c(-0.01709859, -0.41727369, -0.0531144,
0.20031219, -0.19979007,  0.1498574,
0.41804918,  0.01691357,  0.3536388),
nrow = 3, ncol = 3, byrow = T)
EYa <- as.numeric(cbind(1, a) %*% c(0.45, 0.2, 0.15, 0.15))
# number of sims per setting
n.rep <- nrow(sim.out) / n_distinct(dplyr::select(sim.out, n, B, vare, pi.cc))
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with("ghat") |
starts_with("stde") |
starts_with("bste"),
names_to = "method.param",
values_to = "val") %>%
mutate(method = factor(substr(method.param, 6, 6),
levels = c("O", "N", "C"),
labels = c("Oracle",
"Naive",
"Corrected")),
param = factor(substr(method.param, 8, 8)),
name = factor(substr(method.param, 1, 4)),
g.true = EYa[param]) %>%
dplyr::select(-method.param) %>%
group_by(clust, n, B, vare, pi.cc, method, param, name) %>%
mutate(id = row_number()) %>%
pivot_wider(names_from = name,
values_from = val,
id_cols = c(clust, n, B, vare, pi.cc, method,
param, g.true, id)) %>%
mutate(ci.lower = ghat - qnorm(0.975) * stde,
ci.upper = ghat + qnorm(0.975) * stde,
ci.cov = g.true >= ci.lower & g.true <= ci.upper,
bcci.lower = ghat - qnorm(0.975) * bste,
bcci.upper = ghat + qnorm(0.975) * bste,
bcci.cov = g.true >= bcci.lower & g.true <= bcci.upper)
# summarize proportion of errors in std errors by setting
ftc.dat <- sim.out.long %>%
group_by(method, n, pi.cc, param) %>%
summarise(prop.error = mean(is.na(ghat) | stde > 100))
ftc.dat %>%
ungroup() %>%
filter(prop.error > 0)
# extract simulation parameters
n <- unique(sim.out$n)
pi.cc <- unique(sim.out$pi.cc)
# make labels for plots
n.labs <- paste0("n = ", n)
names(n.labs) <- n
pi.cc.labs <- paste0("pi.cc = ", pi.cc)
names(pi.cc.labs) <- pi.cc
param.labs <- paste0("$\\eta(\\ba_", c("1", "2", "3", "4", "5"), ")$")
names(param.labs) <- 1:5
# colorblind friendly pallette
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
# create plots
make.plot <- function(title = T) {
plot <- ggplot(
data = sim.out.long,
aes(x = method,
y = ghat,
fill = method,
color = method)) +
geom_boxplot() +
stat_summary(fun = mean,
geom = "point",
shape = 8,
size = 2,
orientation = "x",
show.legend = F) +
geom_hline(aes(yintercept = g.true),
linetype = "dashed",
color = "orange") +
facet_nested(n + pi.cc ~ param,
scales = "free",
labeller = labeller(n = n.labs,
param = param.labs)) +
labs(y = "Parameter Estimate",
fill = "Method",
color = "Method") +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.position = "bottom") +
scale_fill_manual(values = pal_light) +
scale_color_manual(values = pal_dark)
if (title) {
plot <- plot +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting"))
}
return(plot)
}
make.plot()
tbl <- sim.out.long %>%
filter(method == "Corrected" &
!is.na(ghat) &
stde < 100) %>%
group_by(pi.cc, param) %>%
summarise(bias = 100 * mean(ghat - g.true, na.rm = T),
emp.se = 100 * sd(ghat, na.rm = T),
est.se = 100 * mean(stde),
ci.cov = 100 * mean(ci.cov, na.rm = T),
bcest.se = 100 * mean(bste, na.rm = T),
bcci.cov = 100 * mean(bcci.cov, na.rm = T)) %>%
left_join(filter(ftc.dat, method == "Corrected")) %>%
mutate(Param = param.labs[param],
pi.cc = 100 * pi.cc,
ftc = 100 * prop.error) %>%
dplyr::select(pi.cc, Param, bias, emp.se,
est.se, ci.cov, bcest.se, bcci.cov)
kbl <- tbl %>%
kable(format = "latex",
digits = c(0, 0,
1, 1,
1, 1),
align = c(rep("c", 3),
rep("r", 6)),
booktabs = TRUE,
linesep = c("", "", "\\addlinespace"),
escape = FALSE,
col.names = c("Sub-cohort size", "Parameter",
"Bias", "ESE",
"ASE", "Cov",
"ASE", "Cov")) %>%
add_header_above(c(" " = 4,
"Crude" = 2,
"BC" = 2)) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE)
tbl
View(tbl)
kbl
tbl <- sim.out.long %>%
filter(method == "Corrected" &
!is.na(ghat) &
stde < 100) %>%
group_by(pi.cc, param) %>%
summarise(bias = 100 * mean(ghat - g.true, na.rm = T),
emp.se = 100 * sd(ghat, na.rm = T),
est.se = 100 * mean(stde),
ci.cov = 100 * mean(ci.cov, na.rm = T),
bcest.se = 100 * mean(bste, na.rm = T),
bcci.cov = 100 * mean(bcci.cov, na.rm = T)) %>%
left_join(filter(ftc.dat, method == "Corrected")) %>%
mutate(Param = param.labs[param],
pi.cc = 100 * pi.cc,
ftc = 100 * prop.error) %>%
dplyr::select(pi.cc, Param, bias, emp.se,
est.se, ci.cov, bcest.se, bcci.cov)
tbl <- sim.out.long %>%
filter(method == "Corrected" &
!is.na(ghat) &
stde < 100) %>%
group_by(pi.cc, param) %>%
summarise(bias = 100 * mean(ghat - g.true, na.rm = T),
emp.se = 100 * sd(ghat, na.rm = T),
est.se = 100 * mean(stde),
ci.cov = 100 * mean(ci.cov, na.rm = T),
bcest.se = 100 * mean(bste, na.rm = T),
bcci.cov = 100 * mean(bcci.cov, na.rm = T)) %>%
left_join(filter(ftc.dat, method == "Corrected")) %>%
mutate(Param = param.labs[param],
pi.cc = 100 * pi.cc,
ftc = 100 * prop.error) %>%
dplyr::select(pi.cc, Param, bias, emp.se,
est.se, ci.cov, bcest.se, bcci.cov)
kbl <- tbl %>%
kable(format = "latex",
digits = c(0, 0,
1, 1,
1, 1,
1, 1),
align = c(rep("c", 3),
rep("r", 6)),
booktabs = TRUE,
linesep = c("", "", "\\addlinespace"),
escape = FALSE,
col.names = c("Sub-cohort size", "Parameter",
"Bias", "ESE",
"ASE", "Cov",
"ASE", "Cov")) %>%
add_header_above(c(" " = 4,
"Crude" = 2,
"BC" = 2)) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE)
kbl
