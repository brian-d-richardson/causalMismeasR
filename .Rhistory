dplyr::select(-method.aa)
# make long data frame
sim.out.long <- sim.out %>%
dplyr::select(!starts_with("a")) %>%
pivot_longer(cols = starts_with("OG") | starts_with("NG") | starts_with("CG"),
names_to = "method.aa",
values_to = "val") %>%
mutate(method = factor(substr(method.aa, 1, 2),
levels = c("OG", "NG", "CG"),
labels = c("Oracle G-Formula",
"Naive G-Formula",
"Corrected G-Formula")),
aa = as.numeric(gsub("[.]", "", substr(method.aa, 4, 5))),
a = a[aa],
EYa.true = EYa.true[aa],
err = val - EYa.true) %>%
dplyr::select(-method.aa)
# make long data frame
sim.out.long <- sim.out %>%
dplyr::select(!starts_with("a")) %>%
pivot_longer(cols = starts_with("OG") | starts_with("NG") | starts_with("CG"),
names_to = "method.aa",
values_to = "val") %>%
mutate(method = factor(substr(method.aa, 1, 2),
levels = c("OG", "NG", "CG"),
labels = c("Oracle G-Formula",
"Naive G-Formula",
"Corrected G-Formula")),
aa = as.numeric(gsub("[.]", "", substr(method.aa, 4, 5))),
a = a[aa],
EYa.true = EYa.true[aa]) %>%
dplyr::select(-method.aa)
# make summary data frame
sim.out.summary <- sim.out.long %>%
group_by(n, vare, B, method, a) %>%
summarise(bias = mean(val - EYa.true))
View(sim.out.summary)
# summarize proportion of missing data by setting
sim.out.long %>%
filter(aa == 1) %>%
group_by(method, n, B, vare) %>%
summarise(prop.error = mean(is.na(val))) %>%
filter(prop.error > 0) %>%
ungroup()
# colorblind friendly pallette
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
# make summary data frame
sim.out.summary <- sim.out.long %>%
group_by(n, vare, B, method, a) %>%
summarise(bias = mean(val - EYa.true),
se = sd(val) / sqrt(n.rep),
bias.lower = bias - qnorm(0.975) * se,
bias.lower = bias + qnorm(0.975) * se)
# summarize proportion of missing data by setting
sim.out.long %>%
filter(aa == 1) %>%
group_by(method, n, B, vare) %>%
summarise(prop.error = mean(is.na(val))) %>%
filter(prop.error > 0) %>%
ungroup()
# colorblind friendly pallette
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
fill = method)) +
geom_point() +
geom_line() +
geom_ribbon()
# make summary data frame
sim.out.summary <- sim.out.long %>%
group_by(n, vare, B, method, a) %>%
summarise(bias = mean(val - EYa.true),
se = sd(val) / sqrt(n.rep),
bias.lower = bias - qnorm(0.975) * se,
bias.upper = bias + qnorm(0.975) * se)
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
fill = method)) +
geom_point() +
geom_line() +
geom_ribbon()
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
fill = method)) +
geom_point() +
geom_line() +
geom_ribbon() +
geom_hline(linetype = "dashed")
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
fill = method)) +
geom_point() +
geom_line() +
geom_ribbon() +
geom_hline(yintercept = 0,
linetype = "dashed")
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
fill = method)) +
geom_point() +
geom_line() +
geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed")
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
fill = method)) +
geom_point() +
geom_line() +
#geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed")
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
shape = method,
fill = method)) +
geom_point() +
geom_line() +
#geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed")
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
shape = method,
fill = method)) +
geom_point() +
geom_line() +
#geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
#scale_fill_manual(values = pal_light,
#                    labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs) +
theme_bw() +
theme(legend.position = "bottom") +
labs(color = "Method",
shape = "Method")
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
shape = method,
fill = method)) +
geom_point() +
geom_line() +
#geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
#scale_fill_manual(values = pal_light,
#                    labels = method.labs) +
scale_color_manual(values = pal_dark) +
theme_bw() +
theme(legend.position = "bottom") +
labs(color = "Method",
shape = "Method")
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
shape = method,
fill = method)) +
geom_point() +
geom_line() +
#geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
#scale_fill_manual(values = pal_light,
#                    labels = method.labs) +
scale_color_manual(values = pal_light) +
theme_bw() +
theme(legend.position = "bottom") +
labs(color = "Method",
shape = "Method")
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
shape = method,
fill = method)) +
geom_point() +
geom_line() +
#geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
#scale_fill_manual(values = pal_light,
#                    labels = method.labs) +
# scale_color_manual(values = pal_light) +
theme_bw() +
theme(legend.position = "bottom") +
labs(color = "Method",
shape = "Method")
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
shape = method,
#fill = method
)) +
geom_point() +
geom_line() +
#geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
#scale_fill_manual(values = pal_light,
#                    labels = method.labs) +
scale_color_manual(values = pal_light) +
theme_bw() +
theme(legend.position = "bottom") +
labs(color = "Method",
shape = "Method")
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
shape = method,
#fill = method
)) +
geom_point() +
geom_line() +
#geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
#scale_fill_manual(values = pal_light,
#                    labels = method.labs) +
scale_color_manual(values = pal_light) +
theme_bw() +
theme(legend.position = "bottom") +
labs(color = "Method",
shape = "Method",
y = "Bias")
ggplot(
data = sim.out.summary,
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
shape = method,
#fill = method
)) +
geom_point() +
geom_line() +
geom_errorbar() +
#geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
#scale_fill_manual(values = pal_light,
#                    labels = method.labs) +
scale_color_manual(values = pal_light) +
theme_bw() +
theme(legend.position = "bottom") +
labs(color = "Method",
shape = "Method",
y = "Bias")
sim.out.summary %>%
filter(method != "Oracle G-Formula") %>%
ggplot(
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
shape = method,
fill = method)) +
geom_point() +
geom_line() +
geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_light) +
theme_bw() +
theme(legend.position = "bottom") +
labs(color = "Method",
shape = "Method",
y = "Bias")
sim.out.summary %>%
filter(method != "Oracle G-Formula") %>%
ggplot(
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
shape = method,
fill = method)) +
geom_point() +
geom_line() +
geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
scale_fill_manual(values = pal_light) +
scale_color_manual(values = pal_light) +
theme_bw() +
theme(legend.position = "bottom") +
labs(color = "Method",
shape = "Method",
y = "Bias")
sim.out.summary %>%
filter(method != "Oracle G-Formula") %>%
ggplot(
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
shape = method,
fill = method)) +
geom_point() +
geom_line() +
geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
scale_fill_manual(values = pal_light) +
scale_color_manual(values = pal_light) +
theme_bw() +
theme(legend.position = "bottom") +
labs(color = "Method",
shape = "Method",
fill = "Method",
y = "Bias")
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
\library(devtools)
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
\library(devtools)
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
\library(devtools)
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
library(devtools)
load_all()
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0("sim_data/gfmla2_data/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
# true estimands
g <- c(-2, 0.7, -0.6, 0.4, -0.4, -0.2)          # outcome model parameters
a <- as.numeric(select(                         # exposure value of interest
sim.out, starts_with("a"))[1,])
EYa.true <- 0.4 * inv.logit(-2 + 0.7 * a) +     # true dose response curve at a
0.4 * inv.logit(-2.6 + 0.3 * a) +
0.1 * inv.logit(-1.6 + 0.5 * a) +
0.1 * inv.logit(-2.2 + 0.1 * a)
# number of sims per setting
n.rep <- nrow(sim.out) / n_distinct(dplyr::select(sim.out, n, B, vare))
# make long data frame
sim.out.long <- sim.out %>%
dplyr::select(!starts_with("a")) %>%
pivot_longer(cols = starts_with("OG") | starts_with("NG") | starts_with("CG"),
names_to = "method.aa",
values_to = "val") %>%
mutate(method = factor(substr(method.aa, 1, 2),
levels = c("OG", "NG", "CG"),
labels = c("Oracle G-Formula",
"Naive G-Formula",
"Corrected G-Formula")),
aa = as.numeric(gsub("[.]", "", substr(method.aa, 4, 5))),
a = a[aa],
EYa.true = EYa.true[aa]) %>%
dplyr::select(-method.aa)
# make summary data frame
sim.out.summary <- sim.out.long %>%
group_by(n, vare, B, method, a) %>%
summarise(bias = mean(val - EYa.true),
se = sd(val) / sqrt(n.rep),
bias.lower = bias - qnorm(0.975) * se,
bias.upper = bias + qnorm(0.975) * se)
# summarize proportion of missing data by setting
sim.out.long %>%
filter(aa == 1) %>%
group_by(method, n, B, vare) %>%
summarise(prop.error = mean(is.na(val))) %>%
filter(prop.error > 0) %>%
ungroup()
# colorblind friendly pallette
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
# save plot
ggsave("sim_figures/gfmla_sim_plot.png", width = 6, height = 3, dpi = 300)
p <- sim.out.summary %>%
filter(method != "Oracle G-Formula") %>%
ggplot(
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
shape = method,
fill = method)) +
geom_point() +
geom_line() +
geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
scale_fill_manual(values = pal_light) +
scale_color_manual(values = pal_light) +
theme_bw() +
theme(legend.position = c(0.2, 0.2)) +
labs(color = "Method",
shape = "Method",
fill = "Method",
y = "Bias")
p
p <- sim.out.summary %>%
filter(method != "Oracle G-Formula") %>%
ggplot(
aes(x = a,
y = bias,
ymin = bias.lower,
ymax = bias.upper,
color = method,
shape = method,
fill = method)) +
geom_point() +
geom_line() +
geom_ribbon(alpha = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
scale_fill_manual(values = pal_light) +
scale_color_manual(values = pal_light) +
theme_bw() +
theme(legend.position = c(0.2, 0.3)) +
labs(color = "Method",
shape = "Method",
fill = "Method",
y = "Bias")
p
# save plot
ggsave("sim_figures/gfmla_sim_plot.png",
width = 6,
height = 4,
dpi = 300)
