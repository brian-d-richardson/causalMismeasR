labs(y = "Parameter Estimate",
fill = "Method",
color = "Method") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates for ",
param.labs[param.]),
subtitle = paste0("sample size n = ", n., "; ",
"mx = ", mx, "; ",
"mc = ", mc, "; ",
"my = ", my, "; ",
n.rep, " replicates per setting")) +
theme_bw() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank()) +
scale_fill_manual(values = pal_light[c(1, 2, 3, 6)],
labels = method.labs) +
scale_color_manual(values = pal_dark[c(1, 2, 3, 6)],
labels = method.labs)
}
make.est.plot(param. = 1, n. = n[1])
make.est.plot(param. = 2, n. = n[1])
make.est.plot(param. = 3, n. = n[1])
make.est.plot(param. = 3, n. = n[1]) + ylim(-0.4, 0)
B
make.est.plot(param. = 3, n. = n[1]) + ylim(-0.2, 0.5)
make.est.plot(param. = 3, n. = n[1]) + ylim(-0.2, 0.35)
make.est.plot(param. = 1, n. = n[1]) + ylim(0.75, 1.25)
make.est.plot(param. = 2, n. = n[1]) + ylim(1, 3)
make.est.plot(param. = 3, n. = n[1]) + ylim(-0.2, 0.35)
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
library(kableExtra)
library(devtools)
load_all()
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0("sim_data/dr_data/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
View(sim.out)
# true estimand
g <- 0.75
# number of sims per setting
n.rep <- nrow(sim.out) / n_distinct(dplyr::select(sim.out, n, B, vare))
# number of sims per setting
n.rep <- nrow(sim.out) / n_distinct(dplyr::select(sim.out, n, B, vare, method, type))
# number of sims per setting
n.rep <- nrow(sim.out) / n_distinct(dplyr::select(sim.out, n, B, vare, method, type, ps, os))
# number of sims per setting
n.rep <- nrow(sim.out) / n_distinct(dplyr::select(sim.out, n, B, vare, method, type, ps, out))
# number of sims per setting
n.rep <- nrow(sim.out) /
n_distinct(dplyr::select(sim.out, method, type, ps, out, n, B, vare))
# summarize proportion of missing data by setting
sim.out %>%
group_by(method, type, ps, out, n, B, vare) %>%
summarise(prop.error = mean(is.na(est))) %>%
filter(prop.error > 0) %>%
ungroup()
# extract simulation parameters
n <- unique(sim.out$n)
B <- unique(sim.out$B)
vare <- unique(sim.out$vare)
# make labels for plots
method.labs <- c("G-Formula", "IPW", "Double Robust")
names(method.labs) <- c("gfmla", "ipw", "dr")
names(method.labs) <- c("oracle", "naive", "mccs")
n.labs <- paste0("n = ", n)
names(n.labs) <- n
B.labs <- paste0("B = ", B)
names(B.labs) <- B
a.labs <- paste0("a = ", a)
vare.labs <- paste0("sigma_e = ", vare)
names(vare.labs) <- vare
# colorblind friendly pallette
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
method. = names(method.labs)
n. = n
vare. = vare
est_cutoff = Inf
plot.dat <- sim.out %>%
filter(method %in% method.,
n %in% n.,
vare %in% vare.)
# data for plot
plot.dat <- sim.out %>%
filter(method %in% method.,
n %in% n.,
vare %in% vare.) %>%
mutate(remove = abs(est - EYa.true) > est_cutoff,
lab.y = 0.55*(est_cutoff - EYa.true))
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list) %>%
mutate(g.true = g.true)
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list) %>%
mutate(g.true = g)
# separate plots for each sample size
make.plot <- function(method. = names(method.labs),
n. = n,
vare. = vare,
est_cutoff = Inf) {
# data for plot
plot.dat <- sim.out %>%
filter(method %in% method.,
n %in% n.,
vare %in% vare.) %>%
ggplot(aes(x = type,
y = est,
fill = type,
color = type)) +
geom_boxplot() +
facet_grid(method ~ ps + out,
labeller = labeller(ps = ps.labs,
out = out.labs)) +
geom_hline(yintercept = g,
linetype = "dashed",
color = "orange") +
facet_grid(vare ~ n,
scales = "free",
labeller = labeller(n = n.labs,
vare = vare.labs)) +
labs(y = "Parameter Estimate",
fill = "Type",
color = "Type") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs)
}
make.plot()
ps.labs <- c("PS Correct", "PS Incorrect")
out.labs <- c("Outcome Correct", "Outcome Incorrect")
make.plot()
# separate plots for each sample size
make.plot <- function(method. = names(method.labs),
n. = n,
vare. = vare,
est_cutoff = Inf) {
sim.out %>%
filter(method %in% method.,
n %in% n.,
vare %in% vare.) %>%
ggplot(aes(x = type,
y = est,
fill = type,
color = type)) +
geom_boxplot() +
facet_grid(method ~ ps + out,
labeller = labeller(ps = ps.labs,
out = out.labs)) +
geom_hline(yintercept = g,
linetype = "dashed",
color = "orange") +
facet_grid(vare ~ n,
scales = "free",
labeller = labeller(n = n.labs,
vare = vare.labs)) +
labs(y = "Parameter Estimate",
fill = "Type",
color = "Type") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs)
}
make.plot()
sim.out %>%
filter(method %in% method.,
n %in% n.,
vare %in% vare.)
method.
n.
vare.
View(sim.out)
sim.out %>%
filter(method %in% method.,
n %in% n.,
vare %in% vare.)
method.
sim.out %>%
filter(n %in% n.,
vare %in% vare.)
sim.out %>%
filter(n %in% n.,
vare %in% vare.) %>%
ggplot(aes(x = type,
y = est,
fill = type,
color = type)) +
geom_boxplot() +
facet_grid(method ~ ps + out,
labeller = labeller(ps = ps.labs,
out = out.labs)) +
geom_hline(yintercept = g,
linetype = "dashed",
color = "orange") +
facet_grid(vare ~ n,
scales = "free",
labeller = labeller(n = n.labs,
vare = vare.labs)) +
labs(y = "Parameter Estimate",
fill = "Type",
color = "Type") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs)
sim.out %>%
filter(n %in% n.,
vare %in% vare.) %>%
ggplot(aes(x = type,
y = est,
fill = type,
color = type)) +
geom_boxplot() +
facet_grid(method ~ ps + out,
labeller = labeller(ps = ps.labs,
out = out.labs)) +
geom_hline(yintercept = g,
linetype = "dashed",
color = "orange") +
facet_grid(method ~ ps + out,
labeller = labeller(ps = ps.labs,
out = out.labs)) +
labs(y = "Parameter Estimate",
fill = "Type",
color = "Type") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs)
ps.labs
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
library(kableExtra)
library(devtools)
load_all()
# true estimand
g <- 0.75
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0("sim_data/dr_data/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list) %>%
mutate(g.true = g,
method = factor(method,
levels = c("gfmla", "ipw", "dr"),
labels = c("G-Formula", "IPW", "Doubly Robust")),
type = factor(type,
levels = c("oracle", "naive", "mccs"),
labels = c("Oracle", "Naive", "MCCS")))
# number of sims per setting
n.rep <- nrow(sim.out) /
n_distinct(dplyr::select(sim.out, method, type, ps, out, n, B, vare))
labels = c("Outcome Correct", "Outcome Incorrect"))
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list) %>%
mutate(g.true = g,
method = factor(method,
levels = c("gfmla", "ipw", "dr"),
labels = c("G-Formula", "IPW", "Doubly Robust")),
type = factor(type,
levels = c("oracle", "naive", "mccs"),
labels = c("Oracle", "Naive", "MCCS")),
ps = factor(ps,
levels = c(0, 1),
labels = c("PS Correct", "PS Incorrect")),
out = factor(out,
levels = c(0, 1),
labels = c("Outcome Correct", "Outcome Incorrect")))
# number of sims per setting
n.rep <- nrow(sim.out) /
n_distinct(dplyr::select(sim.out, method, type, ps, out, n, B, vare))
# summarize proportion of missing data by setting
sim.out %>%
group_by(method, type, ps, out, n, B, vare) %>%
summarise(prop.error = mean(is.na(est))) %>%
filter(prop.error > 0) %>%
ungroup()
# extract simulation parameters
n <- unique(sim.out$n)
B <- unique(sim.out$B)
vare <- unique(sim.out$vare)
# make labels for plots
n.labs <- paste0("n = ", n)
names(n.labs) <- n
B.labs <- paste0("B = ", B)
names(B.labs) <- B
vare.labs <- paste0("sigma_e = ", vare)
names(vare.labs) <- vare
# colorblind friendly pallette
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
sim.out %>%
filter(n %in% n.,
vare %in% vare.) %>%
ggplot(aes(x = type,
y = est,
fill = type,
color = type)) +
geom_boxplot() +
facet_grid(method ~ ps + out,
labeller = labeller(ps = ps.labs,
out = out.labs)) +
geom_hline(yintercept = g,
linetype = "dashed",
color = "orange") +
facet_grid(method ~ ps + out) +
labs(y = "Parameter Estimate",
fill = "Type",
color = "Type") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs)
# separate plots for each sample size
make.plot <- function(n. = n,
vare. = vare) {
sim.out %>%
filter(n %in% n.,
vare %in% vare.) %>%
ggplot(aes(x = type,
y = est,
fill = type,
color = type)) +
geom_boxplot() +
facet_grid(method ~ ps + out,
labeller = labeller(ps = ps.labs,
out = out.labs)) +
geom_hline(yintercept = g,
linetype = "dashed",
color = "orange") +
facet_grid(method ~ ps + out) +
labs(y = "Parameter Estimate",
fill = "Type",
color = "Type") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs)
}
make.plot()
# separate plots for each sample size
make.plot <- function(n. = n,
vare. = vare) {
sim.out %>%
filter(n %in% n.,
vare %in% vare.) %>%
ggplot(aes(x = type,
y = est,
fill = type,
color = type)) +
geom_boxplot() +
geom_hline(yintercept = g,
linetype = "dashed",
color = "orange") +
facet_grid(method ~ ps + out) +
labs(y = "Parameter Estimate",
fill = "Type",
color = "Type") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light,
labels = method.labs) +
scale_color_manual(values = pal_dark,
labels = method.labs)
}
make.plot()
# separate plots for each sample size
make.plot <- function(n. = n,
vare. = vare) {
sim.out %>%
filter(n %in% n.,
vare %in% vare.) %>%
ggplot(aes(x = type,
y = est,
fill = type,
color = type)) +
geom_boxplot() +
geom_hline(yintercept = g,
linetype = "dashed",
color = "orange") +
facet_grid(method ~ ps + out) +
labs(y = "Parameter Estimate",
fill = "Type",
color = "Type") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light) +
scale_color_manual(values = pal_dark)
}
make.plot()
# separate plots for each sample size
make.plot <- function(n. = n,
vare. = vare) {
sim.out %>%
filter(n %in% n.,
vare %in% vare.) %>%
ggplot(aes(x = type,
y = est,
fill = type,
color = type)) +
geom_boxplot() +
geom_hline(yintercept = g,
linetype = "dashed",
color = "orange") +
facet_grid(method ~ ps + out, scales = "free") +
labs(y = "Parameter Estimate",
fill = "Type",
color = "Type") +
ggtitle(paste0("Empirical Distribution of Parameter Estimates"),
subtitle = paste0(n.rep, " simulations per setting")) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values = pal_light) +
scale_color_manual(values = pal_dark)
}
make.plot()
View(sim.out)
tbl <- sim.out %>%
filter(n == 2000,
vare == 0.16) %>%
group_by(method, type, ps, os) %>%
summarise(bias = mean(est - g, na.rm = T),
emp.se = sd(est, na.rm = T),
est.se = mean(se, na.rm = T),
mse = mean((est - g.true)^2))
tbl <- sim.out %>%
filter(n == 2000,
vare == 0.16) %>%
group_by(method, type, ps, out) %>%
summarise(bias = mean(est - g, na.rm = T),
emp.se = sd(est, na.rm = T),
est.se = mean(se, na.rm = T),
mse = mean((est - g.true)^2))
View(tbl)
tbl.a3 %>%
kable(digits = 3,
col.names = c("Method", "Type", "PS Modoel", "Outcome Model",
"Bias", "ESE", "ASE", "MSE"),
caption = "Estimated MSM Slope") %>%
kable_styling("striped")
tbl%>%
kable(digits = 3,
col.names = c("Method", "Type", "PS Modoel", "Outcome Model",
"Bias", "ESE", "ASE", "MSE"),
caption = "Estimated MSM Slope") %>%
kable_styling("striped")
